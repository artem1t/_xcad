trigger:
- dev
- master

stages:

- stage: 'Build'
  variables:
    buildConfiguration: 'Release'
    buildPlatform: 'Any CPU'

  jobs:
  - job:
    pool:
      name: 'Azure Pipelines'
      vmImage: windows-latest
      demands:
        - msbuild
        - visualstudio

    steps:
      - task: NuGetToolInstaller@0
        displayName: 'Use NuGet 4.4.1'
        inputs:
          versionSpec: 4.4.1

      - task: NuGetCommand@2
        displayName: 'NuGet restore'
        inputs:
          restoreSolution: '**\*.sln'

      - task: DownloadSecureFile@1
        name: Certificate
        displayName: 'Download code signing certificate'
        inputs:
          secureFile: xarial.snk

      - task: VSBuild@1
        displayName: 'Build and pack project'
        inputs:
          solution: '**\src\**\*.csproj'
          msbuildArgs: '/t:pack /p:OutputPath=$(System.DefaultWorkingDirectory);SignAssembly=true;AssemblyOriginatorKeyFile=$(Certificate.secureFilePath);DelaySign=false'
          platform: '$(BuildPlatform)'
          configuration: '$(BuildConfiguration)'
            
      - task: VSBuild@1
        displayName: 'Build test projects'
        inputs:
            solution: '**\tests\**\*.csproj'
            platform: '$(BuildPlatform)'
            configuration: '$(BuildConfiguration)'
            
      - task: VSTest@2
        displayName: 'Unit test'
        inputs:
          testAssemblyVer2: |
            **\$(BuildConfiguration)\**\*tests*.dll
            !**\obj\**
          platform: '$(BuildPlatform)'
          configuration: '$(BuildConfiguration)'
            
      - task: CopyFiles@2
        displayName: 'Copy Nuget Package'
        inputs:
          SourceFolder: '$(system.defaultworkingdirectory)'
          Contents: '**\*.nupkg'
          TargetFolder: '$(Build.ArtifactStagingDirectory)/packages'
      
      - publish: '$(Build.ArtifactStagingDirectory)/packages'
        artifact: 'packages'

- stage: 'PublishPrereleaseNuGetPackage'
  displayName: 'Publish Prerelease NuGet Package'
  dependsOn: 'Build'
  condition: succeeded()
  jobs:
  - job:
    pool:
      vmImage: 'ubuntu-latest'

    steps:
    - checkout: none

    - download: current
      artifact: 'packages'

    - task: NuGetCommand@2
      displayName: 'Push NuGet Package'
      inputs:
        command: 'push'
        packagesToPush: '$(Pipeline.Workspace)/packages/*.nupkg'
        nuGetFeedType: 'internal'
        publishVstsFeed: 'xarial'

- stage: 'PublishReleaseNuGetPackage'
  displayName: 'Publish Release NuGet Package'
  dependsOn: 'PublishPrereleaseNuGetPackage'
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
  jobs:
  - deployment:
    pool:
      vmImage: 'ubuntu-latest'
    environment: 'nuget-org'
    strategy:
     runOnce:
       deploy:
         steps:
         - task: NuGetCommand@2
           displayName: 'Push NuGet Package'
           inputs:
             command: 'push'
             packagesToPush: '$(Pipeline.Workspace)/packages/*.nupkg'
             nuGetFeedType: 'external'
             publishFeedCredentials: 'Nuget.org'